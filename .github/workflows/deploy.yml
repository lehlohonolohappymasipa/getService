name: Build and Deploy getService

# Prevent multiple simultaneous runs
concurrency:
  group: deploy-getService-main
  cancel-in-progress: true

on:
  push:
    branches:
      - main  # triggers deployment on main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write      # required for OIDC login
      contents: read

    steps:
      # 1️⃣ Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js for Vite
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3️⃣ Install frontend dependencies
      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      # 4️⃣ Build Vite frontend
      - name: Build Vite frontend
        run: npm run build
        working-directory: ./frontend

      # 5️⃣ Setup .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # 6️⃣ Build .NET API
      - name: Build .NET API
        run: dotnet publish -c Release -o ./publish
        working-directory: ./getService.Api

      # 7️⃣ Login to Azure via OIDC (for backend App Service)
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # 8️⃣ Deploy Vite frontend to Azure Static Web App
      - name: Deploy Vite frontend
        uses: Azure/static-web-apps-deploy@v1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "./frontend"
          output_location: "dist"

      # 9️⃣ Deploy .NET backend to App Service
      - name: Deploy .NET backend
        uses: azure/webapps-deploy@v3
        with:
          app-name: getService-api
          package: ./getService.Api/publish
